<?xml version="1.0" encoding="UTF-8"?>
<resources>
<!--仿抖音loading -->
    <declare-styleable name="DYLoadingView">
        <attr name="radius1" format="dimension"/>
        <attr name="radius2" format="dimension"/>
        <attr name="rtlScale" format="float"/>
        <attr name="ltrScale" format="float"/>
        <attr name="color1" format="color"/>
        <attr name="color2" format="color"/>
        <attr name="mixColor" format="color"/>
        <attr name="duration" format="integer"/>
        <attr name="pauseDuration" format="integer"/>
        <attr name="gap" format="dimension"/>
        <attr name="scaleStartFraction" format="float"/>
        <attr name="scaleEndFraction" format="float"/>
    </declare-styleable>


     <declare-styleable name="numberpicker">
        <attr name="startRange" format="integer" />
        <attr name="endRange" format="integer" />
        <attr name="step" format="integer" />
        <attr name="defaultValue" format="integer" />
        <attr name="maxValue" format="integer" />
        <attr name="wrap" format="boolean" />
    </declare-styleable>

    <!-- NumberPicker style. -->
    <attr name="numberPickerStyle" format="reference" />
    <!-- NumberPicker up button style. -->
    <attr name="numberPickerUpButtonStyle" format="reference" />
    <!-- NumberPicker down button style. -->
    <attr name="numberPickerDownButtonStyle" format="reference" />
    <!-- NumberPicker input text style. -->
    <attr name="numberPickerInputTextStyle" format="reference" />
    
    <declare-styleable name="EditTextEx">
        <attr format="string" name="defaultText" />
        <attr format="string" name="leaveText" />
        <attr format="boolean" name="textArea" />
        <attr format="string" name="imeOptions" />
    </declare-styleable>

  <!--  pulllish-->

    <declare-styleable name="PullToRefresh">
        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />
        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color" />
        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color" />
        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />
        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
    </declare-styleable>

    <declare-styleable name="PullScrollView">
        <attr name="header" format="reference" />
        <attr name="headerHeight" format="dimension" />
        <attr name="headerVisibleHeight" format="dimension" />
    </declare-styleable>
    <declare-styleable name="AlignTextView">
        <attr name="align" format="enum">
            <enum name="left" value="0"/>
            <enum name="center" value="1"/>
            <enum name="right" value="2"/>
        </attr>
    </declare-styleable>
    <declare-styleable name="WarpLinearLayout">
        <attr name="grivate" format="enum"><!--对齐方式 !-->
            <enum name="right" value="0"></enum>
            <enum name="left" value="1"></enum>
            <enum name="center" value="2"></enum>
        </attr>
        <attr name="horizontal_Space" format="dimension"></attr>
        <attr name="vertical_Space" format="dimension"></attr>
        <attr name="isFull" format="boolean"></attr>
    </declare-styleable>

</resources>